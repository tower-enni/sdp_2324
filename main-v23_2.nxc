#define THRESHOLD 30
#define ULTRASONIC_PORT IN_1
#define STATE_INIT 0
#define STATE_DRIVE 1
#define STATE_STOP 2

// Light sensors on in2 (L) and in3 (R)
// right engine is OUTc and left is OUTb, Ball catcher is OUT_A
bool walls;
int ultrasonicCM;
int state = STATE_INIT;
// Wall/events counter
int w_counter = 0;
// Ball counter for picking up and throwing
int b_counter = 0;    
// Speed for turning around 
int t_speed = 50;
// Driving speed
int d_speed = 40;
// Threshold for stopping in front of wall
int w_distance = 20;

int initialize() {
   SetSensorLight(IN_2);
   SetSensorLight(IN_3);
   SetSensorLowspeed(ULTRASONIC_PORT);
   // Sound for initialization
   PlayTone(300, 1000);
   PlayTone(400, 1000);
   PlayTone(500, 1000);
   return STATE_DRIVE;
}

int turnaround() {
   RotateMotorEx(OUT_BC, 60, 510, -100, true, true);
}

/*
NOT YET ACTIVE
bool wallstop() {
   int dist = Sensor(IN_1);
   if (dist <= 20) {
      // Off(OUT_BC);
      return FALSE;
   }
   return true;
}
*/

int turnright() {
// move the left tire
   Off(OUT_C);
   OnRev(OUT_B, t_speed);
   return STATE_DRIVE;
}

int turnleft() {
// move the right tire
   Off(OUT_B);
   OnRev(OUT_C, t_speed);
   return STATE_DRIVE;
}

int drive() {
   OnRev(OUT_C, d_speed * 1.1);
   OnRev(OUT_B, d_speed);
   return STATE_DRIVE;
}

void balldrop() {
   Off(OUT_BC);
   Wait(1000);
   RotateMotor(OUT_A, 45, -90);
   RotateMotor(OUT_A, 20, 90);
}

int stopped() {
   Off(OUT_BC);
   Wait(600);
   return STATE_DRIVE;
}

task main() {
   bool isOnLine =  true;
   state = initialize();
   while (isOnLine) {      
      ultrasonicCM = SensorUS(ULTRASONIC_PORT);
      if (state == STATE_DRIVE) {
         if (Sensor(IN_2) > THRESHOLD &&  Sensor(IN_3) > THRESHOLD) {
            state = drive();
         }
         if (Sensor(IN_2) <= THRESHOLD &&  Sensor(IN_3) > THRESHOLD) {
            Wait(50);
            state = turnleft();
         }
         if (Sensor(IN_2) > THRESHOLD &&  Sensor(IN_3) <= THRESHOLD) {
            Wait(50);
            state = turnright();
         }
         if (Sensor(IN_2) < THRESHOLD &&  Sensor(IN_3) < THRESHOLD) {
            Wait(100);
         }
         if (ultrasonicCM < w_distance) {
            Off(OUT_BC);
            Wait(10);
            if (w_counter == 0) {
               turnaround();
               Wait(20);
               w_counter++;
               state = drive();
               }
            if (w_counter == 1) {
               Off(OUT_BC);
               w_counter++;
            }
            if (w_counter == 2) {
                  Off(OUT_BC);
                  balldrop();
            }
         }
      }
   }
}